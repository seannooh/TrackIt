{"ast":null,"code":"var _jsxFileName = \"/Users/seanoh/Desktop/trackit-app/frontend/src/components/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main({\n  journal,\n  setJournal\n}) {\n  _s();\n  // Input for searching food\n  const [searchQuery, setSearchQuery] = useState('');\n  // Holds list of foods from fetched from database\n  const [searchResults, setSearchResults] = useState([]);\n  // State for whether or not an API request is loading\n  const [isLoading, setIsLoading] = useState(false);\n  // State used to reduce amount of search API called\n  const [debounceTimeout, setDebounceTimeout] = useState(null);\n  // State managing food item clicked and menu shown\n  const [selectedFood, setSelectedFood] = useState(null);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  // State for selected date\n  const today = new Date().toLocaleDateString().split(\"T\")[0];\n  const [date, setDate] = useState(today);\n  // State for custom food\n  const [customFood, setCustomFood] = useState({\n    name: \"\",\n    serving_size_g: 0,\n    calories: 0,\n    carbohydrates_total_g: 0,\n    protein_g: 0,\n    fat_total_g: 0\n  });\n  const [isCustomOpen, setIsCustomOpen] = useState(false);\n  // Get user id\n  const user_id = localStorage.getItem(\"userId\");\n\n  // Handle search query changes\n  const handleSearchChange = event => {\n    const query = event.target.value;\n    setSearchQuery(query);\n\n    // Clear the previous timeout if the user is typing again\n    if (debounceTimeout) {\n      clearTimeout(debounceTimeout);\n    }\n    if (query) {\n      // Debounce the API call to only trigger after the user stops typing\n      const timeout = setTimeout(() => {\n        searchFoods(query);\n      }, 500);\n      setDebounceTimeout(timeout);\n    } else {\n      setSearchResults([]);\n    }\n  };\n\n  // Fetch food data from the backend\n  const searchFoods = async query => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(`http://localhost:5002/api/search?query=${encodeURIComponent(query)}`, {\n        method: 'GET'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const foods = await response.json();\n      if (foods && foods.length > 0) {\n        setSearchResults(foods);\n      } else {\n        setSearchResults([]);\n      }\n    } catch (err) {\n      console.error('Error fetching food data', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Set selected food and open menu\n  const handleFoodClick = food => {\n    setSelectedFood(food);\n    setIsMenuOpen(true);\n  };\n\n  // Close menu\n  const closeMenu = () => {\n    setIsMenuOpen(false);\n    setIsCustomOpen(false);\n    setSelectedFood(null);\n  };\n  const addToJournal = async (foodItem, mealType) => {\n    setJournal(prevState => {\n      const newJournal = {\n        ...prevState\n      };\n      if (!newJournal[date]) {\n        newJournal[date] = {\n          breakfast: [],\n          lunch: [],\n          dinner: [],\n          snacks: []\n        };\n      }\n      const existingFood = newJournal[date][mealType].find(item => item.foodName === foodItem.name);\n      if (existingFood) {\n        existingFood.quantity += 1;\n      } else {\n        newJournal[date][mealType].push({\n          userId: user_id,\n          entry_date: date,\n          mealType,\n          foodName: foodItem.name,\n          serving_size_g: foodItem.serving_size_g,\n          quantity: 1,\n          calories: foodItem.calories,\n          carbohydrates_total_g: foodItem.carbohydrates_total_g,\n          protein_g: foodItem.protein_g,\n          fat_total_g: foodItem.fat_total_g\n        });\n      }\n      return newJournal;\n    });\n    try {\n      const response = await fetch(\"http://localhost:5001/journal\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId: user_id,\n          entry_date: date,\n          mealType,\n          foodName: foodItem.name,\n          serving_size: foodItem.serving_size_g,\n          quantity: 1,\n          calories: foodItem.calories,\n          carbohydrates_total_g: foodItem.carbohydrates_total_g,\n          protein_g: foodItem.protein_g,\n          fat_total_g: foodItem.fat_total_g\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Failed to add food\");\n      }\n      const data = await response.json();\n      console.log(\"Response from backend:\", data);\n    } catch (error) {\n      console.error(\"Error adding food:\", error.message);\n    }\n    closeMenu();\n  };\n\n  // HANDLE CUSTOM FOOD\n  const handleCustomFood = () => {\n    setIsCustomOpen(true);\n  };\n  const addCustomFoodToJournal = async mealType => {\n    const newFoodEntry = {\n      userId: user_id,\n      entry_date: date,\n      mealType,\n      foodName: customFood.name,\n      serving_size_g: customFood.serving_size_g,\n      quantity: 1,\n      calories: Number(customFood.calories),\n      carbohydrates_total_g: Number(customFood.carbohydrates_total_g),\n      protein_g: Number(customFood.protein_g),\n      fat_total_g: Number(customFood.fat_total_g)\n    };\n\n    // Update state\n    setJournal(prevState => {\n      const newJournal = {\n        ...prevState\n      };\n      if (!newJournal[date]) {\n        newJournal[date] = {\n          breakfast: [],\n          lunch: [],\n          dinner: [],\n          snacks: []\n        };\n      }\n      newJournal[date][mealType].push(newFoodEntry);\n      return newJournal;\n    });\n\n    // Send to backend\n    try {\n      const response = await fetch(\"http://localhost:5001/journal\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newFoodEntry)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Failed to add custom food\");\n      }\n      const data = await response.json();\n      console.log(\"Custom food added:\", data);\n    } catch (error) {\n      console.error(\"Error adding custom food:\", error.message);\n    }\n    closeMenu();\n  };\n\n  // Render UI\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Search Food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-section\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search for food...\",\n          value: searchQuery,\n          onChange: handleSearchChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-section\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 35\n        }, this), searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: searchResults.map((food, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleFoodClick(food),\n            children: food.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this) : searchQuery && !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"No results found for \\\"\", searchQuery, \"\\\".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-food-section\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"custom-food\",\n          onClick: handleCustomFood,\n          children: \"Create a Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), isCustomOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-menu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Food Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: customFood.name,\n            onChange: e => setCustomFood({\n              ...customFood,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Serving Size in grams:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: customFood.serving_size_g,\n            onChange: e => setCustomFood({\n              ...customFood,\n              serving_size_g: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Calories:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: customFood.calories,\n            onChange: e => setCustomFood({\n              ...customFood,\n              calories: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Carbs:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: customFood.carbohydrates_total_g,\n            onChange: e => setCustomFood({\n              ...customFood,\n              carbohydrates_total_g: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Protein:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: customFood.protein_g,\n            onChange: e => setCustomFood({\n              ...customFood,\n              protein_g: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Fat:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: customFood.fat_total_g,\n            onChange: e => setCustomFood({\n              ...customFood,\n              fat_total_g: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addCustomFoodToJournal('breakfast'),\n            children: \"Add to Breakfast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addCustomFoodToJournal('lunch'),\n            children: \"Add to Lunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addCustomFoodToJournal('dinner'),\n            children: \"Add to Dinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addCustomFoodToJournal('snacks'),\n            children: \"Add to Snacks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeMenu,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-section\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"date-picker\",\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value) // Update selected date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), isMenuOpen && selectedFood && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedFood.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Serving Size: \", selectedFood.serving_size_g, \"g\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Calories: \", selectedFood.calories]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Carbs: \", selectedFood.carbohydrates_total_g, \"g\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Protein: \", selectedFood.protein_g, \"g\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fat: \", selectedFood.fat_total_g, \"g\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addToJournal(selectedFood, 'breakfast'),\n            children: \"Add to Breakfast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addToJournal(selectedFood, 'lunch'),\n            children: \"Add to Lunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addToJournal(selectedFood, 'dinner'),\n            children: \"Add to Dinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addToJournal(selectedFood, 'snacks'),\n            children: \"Add to Snacks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeMenu,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"mPUdqzVMFaJpVLrJyW+MD5574xY=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Main","journal","setJournal","_s","searchQuery","setSearchQuery","searchResults","setSearchResults","isLoading","setIsLoading","debounceTimeout","setDebounceTimeout","selectedFood","setSelectedFood","isMenuOpen","setIsMenuOpen","today","Date","toLocaleDateString","split","date","setDate","customFood","setCustomFood","name","serving_size_g","calories","carbohydrates_total_g","protein_g","fat_total_g","isCustomOpen","setIsCustomOpen","user_id","localStorage","getItem","handleSearchChange","event","query","target","value","clearTimeout","timeout","setTimeout","searchFoods","response","fetch","encodeURIComponent","method","ok","Error","status","foods","json","length","err","console","error","handleFoodClick","food","closeMenu","addToJournal","foodItem","mealType","prevState","newJournal","breakfast","lunch","dinner","snacks","existingFood","find","item","foodName","quantity","push","userId","entry_date","headers","body","JSON","stringify","serving_size","errorData","message","data","log","handleCustomFood","addCustomFoodToJournal","newFoodEntry","Number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","index","onClick","e","id","_c","$RefreshReg$"],"sources":["/Users/seanoh/Desktop/trackit-app/frontend/src/components/Main.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function Main({ journal, setJournal }) {\n    // Input for searching food\n    const [searchQuery, setSearchQuery] = useState('');\n    // Holds list of foods from fetched from database\n    const [searchResults, setSearchResults] = useState([]);\n    // State for whether or not an API request is loading\n    const [isLoading, setIsLoading] = useState(false);\n    // State used to reduce amount of search API called\n    const [debounceTimeout, setDebounceTimeout] = useState(null);\n    // State managing food item clicked and menu shown\n    const [selectedFood, setSelectedFood] = useState(null);\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    // State for selected date\n    const today = new Date().toLocaleDateString().split(\"T\")[0];\n    const [date, setDate] = useState(today);\n    // State for custom food\n    const[customFood, setCustomFood] = useState({\n        name: \"\",\n        serving_size_g: 0,\n        calories: 0,\n        carbohydrates_total_g: 0, \n        protein_g: 0,\n        fat_total_g: 0\n    });\n    const [isCustomOpen, setIsCustomOpen] = useState(false);\n    // Get user id\n    const user_id = localStorage.getItem(\"userId\");\n\n\n    // Handle search query changes\n    const handleSearchChange = (event) => {\n        const query = event.target.value;\n        setSearchQuery(query);\n\n        // Clear the previous timeout if the user is typing again\n        if (debounceTimeout) {\n            clearTimeout(debounceTimeout);\n        }\n\n        if (query) {\n            // Debounce the API call to only trigger after the user stops typing\n            const timeout = setTimeout(() => {\n                searchFoods(query);\n            }, 500);\n\n            setDebounceTimeout(timeout);\n        } else {\n            setSearchResults([]);\n        }\n    };\n\n    // Fetch food data from the backend\n    const searchFoods = async (query) => {\n        setIsLoading(true);\n    \n        try {\n            const response = await fetch(`http://localhost:5002/api/search?query=${encodeURIComponent(query)}`, {\n                method: 'GET'\n            });\n    \n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n    \n            const foods = await response.json();\n    \n            if (foods && foods.length > 0) {\n                setSearchResults(foods);\n            } else {\n                setSearchResults([]);\n            }\n        } catch (err) {\n            console.error('Error fetching food data', err);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n    \n\n    // Set selected food and open menu\n    const handleFoodClick = (food) => {\n        setSelectedFood(food);\n        setIsMenuOpen(true);\n    };\n\n    // Close menu\n    const closeMenu = () => {\n        setIsMenuOpen(false);\n        setIsCustomOpen(false);\n        setSelectedFood(null);\n    };\n\n\n    const addToJournal = async (foodItem, mealType) => {\n        setJournal((prevState) => {\n            const newJournal = { ...prevState };\n    \n            if (!newJournal[date]) {\n                newJournal[date] = { breakfast: [], lunch: [], dinner: [], snacks: [] };\n            }\n    \n            const existingFood = newJournal[date][mealType].find(\n                (item) => item.foodName === foodItem.name\n            );\n    \n            if (existingFood) {\n                existingFood.quantity += 1;\n            } else {\n                newJournal[date][mealType].push({\n                    userId: user_id,\n                    entry_date: date,\n                    mealType,\n                    foodName: foodItem.name,\n                    serving_size_g: foodItem.serving_size_g,\n                    quantity: 1,\n                    calories: foodItem.calories,\n                    carbohydrates_total_g: foodItem.carbohydrates_total_g,\n                    protein_g: foodItem.protein_g,\n                    fat_total_g: foodItem.fat_total_g,\n                });\n            }\n    \n            return newJournal;\n        });\n    \n        try {\n            const response = await fetch(\"http://localhost:5001/journal\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    userId: user_id,\n                    entry_date: date,\n                    mealType,\n                    foodName: foodItem.name,\n                    serving_size: foodItem.serving_size_g,\n                    quantity: 1,\n                    calories: foodItem.calories,\n                    carbohydrates_total_g: foodItem.carbohydrates_total_g,\n                    protein_g: foodItem.protein_g,\n                    fat_total_g: foodItem.fat_total_g,\n                }),\n            });\n        \n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.message || \"Failed to add food\");\n            }\n        \n            const data = await response.json();\n            console.log(\"Response from backend:\", data);\n        } catch (error) {\n            console.error(\"Error adding food:\", error.message);\n        }        \n    \n        closeMenu();\n    };\n\n    // HANDLE CUSTOM FOOD\n    const handleCustomFood = () => {\n        setIsCustomOpen(true);\n    }\n\n    const addCustomFoodToJournal = async (mealType) => {\n        const newFoodEntry = {\n            userId: user_id,\n            entry_date: date,\n            mealType,\n            foodName: customFood.name,\n            serving_size_g: customFood.serving_size_g,\n            quantity: 1,\n            calories: Number(customFood.calories),\n            carbohydrates_total_g: Number(customFood.carbohydrates_total_g),\n            protein_g: Number(customFood.protein_g),\n            fat_total_g: Number(customFood.fat_total_g),\n        };\n    \n        // Update state\n        setJournal((prevState) => {\n            const newJournal = { ...prevState };\n    \n            if (!newJournal[date]) {\n                newJournal[date] = { breakfast: [], lunch: [], dinner: [], snacks: [] };\n            }\n    \n            newJournal[date][mealType].push(newFoodEntry);\n    \n            return newJournal;\n        });\n    \n        // Send to backend\n        try {\n            const response = await fetch(\"http://localhost:5001/journal\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(newFoodEntry),\n            });\n        \n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.message || \"Failed to add custom food\");\n            }\n        \n            const data = await response.json();\n            console.log(\"Custom food added:\", data);\n        } catch (error) {\n            console.error(\"Error adding custom food:\", error.message);\n        }        \n    \n        closeMenu();\n    };\n    \n    // Render UI\n    return (\n        <div className=\"main-page\">\n            <div className=\"search\">\n                <h1>Search Food</h1>\n    \n                <div className=\"search-section\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search for food...\"\n                        value={searchQuery}\n                        onChange={handleSearchChange}\n                    />\n                </div>\n    \n                <div className=\"results-section\">\n                    {isLoading && <p>Loading...</p>}\n    \n                    {searchResults.length > 0 ? (\n                        <ul>\n                            {searchResults.map((food, index) => (\n                                <li key={index} onClick={() => handleFoodClick(food)}>\n                                    {food.name}\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        searchQuery && !isLoading && <p>No results found for \"{searchQuery}\".</p>\n                    )}\n                </div>\n    \n                <div className=\"custom-food-section\">\n                    <button className=\"custom-food\" onClick={handleCustomFood}>Create a Food</button>\n                </div>\n                {isCustomOpen && (\n                    <div className=\"custom-menu\">\n                        <div className=\"custom-content\">\n                            <label>Food Name:</label>\n                            <input \n                                value={customFood.name} \n                                onChange={(e) => setCustomFood({...customFood, name: e.target.value})} \n                            />\n                            <label>Serving Size in grams:</label>\n                            <input \n                                type=\"number\"\n                                value={customFood.serving_size_g} \n                                onChange={(e) => setCustomFood({...customFood, serving_size_g: e.target.value})} \n                            />\n                            <label>Calories:</label>\n                            <input \n                                type=\"number\"\n                                value={customFood.calories} \n                                onChange={(e) => setCustomFood({...customFood, calories: e.target.value})} \n                            />\n                            <label>Carbs:</label>\n                            <input \n                                type=\"number\"\n                                value={customFood.carbohydrates_total_g} \n                                onChange={(e) => setCustomFood({...customFood, carbohydrates_total_g: e.target.value})} \n                            />\n                            <label>Protein:</label>\n                            <input \n                                type=\"number\"\n                                value={customFood.protein_g} \n                                onChange={(e) => setCustomFood({...customFood, protein_g: e.target.value})} \n                            />\n                            <label>Fat:</label>\n                            <input \n                                type=\"number\"\n                                value={customFood.fat_total_g} \n                                onChange={(e) => setCustomFood({...customFood, fat_total_g: e.target.value})} \n                            />\n                            <button onClick={() => addCustomFoodToJournal('breakfast')}>Add to Breakfast</button>\n                            <button onClick={() => addCustomFoodToJournal('lunch')}>Add to Lunch</button>\n                            <button onClick={() => addCustomFoodToJournal('dinner')}>Add to Dinner</button>\n                            <button onClick={() => addCustomFoodToJournal('snacks')}>Add to Snacks</button>\n                            <button onClick={closeMenu}>Close</button>\n                        </div>\n                    </div>\n                )}\n    \n                <div className=\"date-section\">\n                    <input\n                        id=\"date-picker\"\n                        type=\"date\"\n                        value={date}\n                        onChange={(e) => setDate(e.target.value)} // Update selected date\n                    />\n                </div>\n    \n                {isMenuOpen && selectedFood && (\n                    <div className=\"menu\">\n                        <div className=\"menu-content\">\n                            <h3>{selectedFood.name}</h3>\n                            <p>Serving Size: {selectedFood.serving_size_g}g</p>\n                            <p>Calories: {selectedFood.calories}</p>\n                            <p>Carbs: {selectedFood.carbohydrates_total_g}g</p>\n                            <p>Protein: {selectedFood.protein_g}g</p>\n                            <p>Fat: {selectedFood.fat_total_g}g</p>\n                            <button onClick={() => addToJournal(selectedFood, 'breakfast')}>Add to Breakfast</button>\n                            <button onClick={() => addToJournal(selectedFood, 'lunch')}>Add to Lunch</button>\n                            <button onClick={() => addToJournal(selectedFood, 'dinner')}>Add to Dinner</button>\n                            <button onClick={() => addToJournal(selectedFood, 'snacks')}>Add to Snacks</button>\n                            <button onClick={closeMenu}>Close</button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}